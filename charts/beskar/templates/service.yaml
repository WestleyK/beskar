apiVersion: v1
kind: Service
metadata:
  name: {{ template "beskar.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "beskar.labels" . | nindent 4 }}
{{- if .Values.services.registry.annotations }}
  annotations:
{{ toYaml .Values.services.registry.annotations | indent 4 }}
{{- end }}
spec:
  type: {{ .Values.services.registry.type }}
{{- if (and (eq .Values.services.registry.type "ClusterIP") (not (empty .Values.services.registry.clusterIP))) }}
  clusterIP: {{ .Values.services.registry.clusterIP }}
{{- end }}
{{- if (and (eq .Values.services.registry.type "LoadBalancer") (not (empty .Values.services.registry.loadBalancerIP))) }}
  loadBalancerIP: {{ .Values.services.registry.loadBalancerIP }}
{{- end }}
{{- if (and (eq .Values.services.registry.type "LoadBalancer") (not (empty .Values.services.registry.loadBalancerSourceRanges))) }}
  loadBalancerSourceRanges: {{ .Values.services.registry.loadBalancerSourceRanges }}
{{- end }}
{{- if .Values.services.registry.sessionAffinity }}
  sessionAffinity: {{ .Values.services.registry.sessionAffinity }}
  {{- if .Values.services.registry.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{ toYaml .Values.services.registry.sessionAffinityConfig | nindent 4 }}
  {{- end -}}
{{- end }}
  ports:
    - port: {{ .Values.services.registry.port }}
      protocol: TCP
      name: {{ if .Values.tlsSecretName }}https{{ else }}http{{ end }}-{{ .Values.services.registry.port }}
      targetPort: 5000
{{- if (and (eq .Values.services.registry.type "NodePort") (not (empty .Values.services.registry.nodePort))) }}
      nodePort: {{ .Values.services.registry.nodePort }}
{{- end }}
{{- if .Values.metrics.enabled }}
    - port: {{ .Values.metrics.port }}
      protocol: TCP
      name: http-metrics
      targetPort: {{ (split ":" .Values.configData.registry.http.debug.addr)._1 }}
{{- end }}
  selector:
    {{- include "beskar.selectorLabels" . | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "beskar.fullname" . }}-gossip
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "beskar.labels" . | nindent 4 }}
    go.ciq.dev/beskar-gossip: "true"
{{- if .Values.services.gossip.annotations }}
  annotations:
{{ toYaml .Values.services.gossip.annotations | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
{{- if .Values.services.gossip.sessionAffinity }}
  sessionAffinity: {{ .Values.services.gossip.sessionAffinity }}
  {{- if .Values.services.gossip.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{ toYaml .Values.services.gossip.sessionAffinityConfig | nindent 4 }}
  {{- end -}}
{{- end }}
  ports:
    - port: {{ .Values.services.gossip.port }}
      protocol: TCP
      name: gossip-tcp
      targetPort: 5002
    - port: {{ .Values.services.gossip.port }}
      protocol: UDP
      name: gossip-udp
      targetPort: 5002
  selector:
    {{- include "beskar.selectorLabels" . | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "beskar.fullname" . }}-groupcache
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "beskar.labels" . | nindent 4 }}
{{- if .Values.services.groupcache.annotations }}
  annotations:
{{ toYaml .Values.services.groupcache.annotations | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
{{- if .Values.services.groupcache.sessionAffinity }}
  sessionAffinity: {{ .Values.services.groupcache.sessionAffinity }}
  {{- if .Values.services.groupcache.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{ toYaml .Values.services.groupcache.sessionAffinityConfig | nindent 4 }}
  {{- end -}}
{{- end }}
  ports:
    - port: {{ .Values.services.groupcache.port }}
      protocol: TCP
      name: groupcache
      targetPort: 5003
  selector:
    {{- include "beskar.selectorLabels" . | nindent 4 }}